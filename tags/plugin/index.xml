<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bismuthcoin.org – Plugin</title><link>https://alias-bitsignal.github.io/tags/plugin/</link><description>Recent content in Plugin on bismuthcoin.org</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 25 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://alias-bitsignal.github.io/tags/plugin/index.xml" rel="self" type="application/rss+xml"/><item><title>Tesla Battery Monitoring</title><link>https://alias-bitsignal.github.io/blog/2020-05-25-tesla-battery-monitoring/</link><pubDate>Mon, 25 May 2020 00:00:00 +0000</pubDate><guid>https://alias-bitsignal.github.io/blog/2020-05-25-tesla-battery-monitoring/</guid><description>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-battery-monitoring.webp" alt="" loading="lazy" />
Tesla is a market leader in electric vehicles (EVs). They have currently sold and delivered more than 1 million EVs worldwide while production is ramping up fast with new factories in Europe and China.&lt;/p>
&lt;h2>Tesla Battery Monitoring on Blockchain&lt;span class="hx-absolute -hx-mt-20" id="tesla-battery-monitoring-on-blockchain">&lt;/span>
&lt;a href="#tesla-battery-monitoring-on-blockchain" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Although EVs in general require little maintenance, one expensive component in the car needs to be treated with care: the battery. This video explains what can happen if it is not. With Tesla EVs, there is an 8-year warranty on the battery. After this period of time, there is no longer a warranty, but a car is normally expected to last much longer than this. Although battery costs are declining over time, a replacement battery would typically cost $10,000 or more nowadays.&lt;/p>
&lt;p>So, what can an owner do to maximize the lifetime of his or her EV battery? The CEO of Tesla – Elon Musk – has previously recommended to keep the battery level between 80% and 30%, see this tweet and the reply.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-tweet.png" alt="" loading="lazy" />&lt;/p>
&lt;p>The table below illustrates that the lifetime of Li-Ion batteries is limited to a number of charging cycles. As seen from the table, smaller charging cycles consume proportionally less lifetime compared with full charges. The typical lifetime of a Li-Ion battery with 0-100% charge cycles is typically 450 cycles. With 10% charge cycles, on the other hand, the lifetime would typically be 10,000 cycles or more. So, a battery with 10% charging cycles will typically achieve a double lifetime compared to one which has done 0-100% cycles, for the same kWh energy consumption. It is clear from this observation that the charging behavior of the owner will significantly influence the condition of the battery, and hence the potential resale value of the vehicle.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Li-cycle-life.png" alt="" loading="lazy" />
Table from the paper: Yu Miao et.al., “Current Li-Ion Battery Technologies in Electric Vehicles and Opportunities for Advancements”, &lt;a href="https://doi.org/10.3390/en12061074" target="_blank" rel="noopener">https://doi.org/10.3390/en12061074&lt;/a>&lt;/p>
&lt;p>When selling an EV on the second hand market, the remaining lifetime of the battery should be one of the most important questions. However, this question could be quite difficult to answer. If the battery condition is unknown, this could affect the resale value by giving the owner a lower price regardless of the actual condition. If, on the other hand the owner can prove, somehow, that the battery was treated with care and the expected amount of remaining lifetime is significant, the resale value of the vehicle should naturally be higher.&lt;/p>
&lt;p>On the Tesla screen inside the vehicle and also on Tesla’s phone app, it is possible to view and inspect some battery parameters. However, these parameters are lost over time. There is a plot in the car which shows the efficiency (Wh/mi or Wh/km), but this plot is limited to the last few miles or kilometers. After a certain distance those values are lost for the owner.&lt;/p>
&lt;p>Tesla has an (unofficial) API which allows 3rd party services to log data from owner’s cars. However, by using these services you have to either expose your Tesla login credentials or give an API token to these services. Many owners do not feel comfortable doing this, because it means the 3rd party service could potentially take control over your car, not just read data. Also, there is no guarantee that a 3rd party web service will continue to exist over the lifetime of your car. The average lifetime of an app or a web service is usually considerably shorter than a vehicle. If the operator of the service decides to discontinue – for whatever reason – your vehicle data may be lost. Even if you have a backup of the data, this may not be very useful if the user interface to display and analyze the data is no longer available. Another factor is the cost: most of the 3rd party services require you to pay a monthly fee to use their service to display and analyze your own historic data.&lt;/p>
&lt;p>This is where blockchain technology enters the picture. The article &lt;a href="https://alias-bitsignal.github.io/blog/2020-04-30-condition-monitoring/" >“Decentralized Condition Monitoring”&lt;/a> explains how a public blockchain can be a good solution when the following conditions are met:&lt;/p>
&lt;ul>
&lt;li>More than one participant needs to be able to submit and update data.&lt;/li>
&lt;li>The participants do not need to know and trust each other.&lt;/li>
&lt;li>The data does not need to be private.&lt;/li>
&lt;li>The database needs to be resistant to attacks or censorship.&lt;/li>
&lt;/ul>
&lt;p>For the above-mentioned reasons a solution for battery condition monitoring of Tesla EVs has been implemented by using the open source Bismuth public blockchain. Specifically, a Tesla plug-in (also called “crystal” in Bismuth terminology) has been developed for use together with the open source &lt;a href="https://github.com/bismuthfoundation/TornadoWallet" target="_blank" rel="noopener">TornadoWallet&lt;/a>. Some of the features of the implemented solution are:&lt;/p>
&lt;ul>
&lt;li>The vehicle owner will not expose his or her login credentials to anyone, since the app runs on the local computer.&lt;/li>
&lt;li>All the code involved is open source and publicly available on GitHub on the official account of the Bismuth Foundation. Hence, anyone can verify that the software is safe to use and that there is no malicious intent.&lt;/li>
&lt;li>When the owner submits data from the vehicle to the public blockchain, he or she can decide to publish the vehicle’s identification number (VIN) openly, or to encrypt it with a password to remain anonymous. This should ideally be a strong password, and not identical to an existing one used for other apps or services.&lt;/li>
&lt;li>If the owner wants to sell the vehicle in the future, the password can be revealed to the new owner. The new owner can then verify that the submitted data actually belongs to the vehicle’s VIN.&lt;/li>
&lt;li>The first owner can transfer the virtual asset on the blockchain to the new owner, to allow the new owner to continue to submit data from the vehicle using his or her own account, while keeping the entire track record.&lt;/li>
&lt;li>To discourage spam and fake data, there are some costs (fees in BIS currency) involved when registering a new VIN on the chain and to submit data.&lt;/li>
&lt;li>If someone submits fake data to the chain, this would most likely be detected by other users, or by new data analysis services based on the publicly available data. For example, the odometer of a car can never decrease, or the amount of energy (kWh) added should, to some extent, match the battery level and distance driven parameters.&lt;/li>
&lt;li>To view and analyze the data is free for everyone. A public website has been set up for this purpose, to allow anyone to view and analyze the data without owning a Tesla vehicle or the need to run the TornadoWallet on their local computer.&lt;/li>
&lt;/ul>
&lt;p>The public website has been developed to also work well with the Tesla in-car browser (Chromium). The screenshots below are taken from an actual vehicle, for both Night and Day mode.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Tesla-Bismuth-Crystal-01.png" alt="" loading="lazy" />
viewed in a Tesla vehicle (Night Mode).
&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Tesla-Bismuth-Crystal-02.png" alt="" loading="lazy" />
viewed in a Tesla vehicle (Day Mode).&lt;/p>
&lt;p>If you have an Android phone it is also possible to run the Tesla plug-in locally by using Termux, &lt;a href="https://steinbuch.wordpress.com/2015/01/24/tesla-model-s-battery-degradation-data" target="_blank" rel="noopener">see link&lt;/a>. In this way, it is possible to submit vehicle data while on the road, for example just before and after charging your vehicle at a public supercharger station.&lt;/p>
&lt;p>The screenshot below shows the data viewing and analysis section of the app. In this example, the vehicle IDs available for viewing have been encrypted with a password. Hence the actual VIN numbers of these cars are not available. The address on the right shows which Bismuth account has submitted the data.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Tesla-Bismuth-Crystal-03.png" alt="" loading="lazy" />&lt;/p>
&lt;p>In the menu above, a vehicle asset ID is selected as well as the start and end dates. After that, a number of parameters are available for viewing and analysis. One example plot is the “Estimated Max Range vs. Odometer” and the associated curve fit, see plot below.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Tesla-Bismuth-Crystal-04.png" alt="" loading="lazy" />
Estimated Range vs. Odometer and Curve Fit.&lt;/p>
&lt;p>The green dots in this plot represent individual data points submitted by the owner to the blockchain. The parameter “Estimated Max Range” is based on data from the Tesla API, by dividing the estimated remaining range with the battery level. The curve fit is based on the data points matching the “Range Filter”. In this example only the 1% largest values are used to estimate the red curve. As can be seen from this plot, the estimated max range is falling, from about 485km to 480km. However, this plot does not necessarily represent the true battery condition, since a number of parameters may influence the estimate, such as ambient temperature, driving style, road conditions, etc. The way to get a more accurate measure of maximum range is to do a full charge (0-100%) and then check the EPA rated range (in North America) or Typical range (in Europe and Asia/Pacific), see link. However, you don’t want to do this exercise too often, as a 0-100% deep charging cycle is exactly what reduces the remaining lifetime of the battery the most.&lt;/p>
&lt;p>If the owner submits data to the blockchain regularly, just before and after every charging event, it is instead possible to estimate the battery life without having to do deep charges. If all the charging events are recorded, Bismuth’s Tesla app allows for counting the cycles, using a method called rainflow counting, as illustrated in the screenshots below. The rainflow method is normally used in counting fatigue cycles in mechanical engineering, but it can also be used for counting battery cycles.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Tesla-Bismuth-Crystal-05.png" alt="" loading="lazy" />
&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Tesla-Bismuth-Crystal-06.png" alt="" loading="lazy" />
Counted battery cycles and “Full Cycle Equivalent” during a selected time period.&lt;/p>
&lt;p>The plot above shows that the owner has made several charging cycles at various levels from 10% up to 100%. By using the Li-Ion cycle life table from Miao et.al, these charging events are converted and summed up to a “Full Cycle Equivalent” of 6.03 during the time period selected (May 2020). Since the battery is expected to have a life time of about 450 full cycles, it can be estimated that 1.3% of the battery life was used up during this particular month. If this owner charges the equivalent of 6 full cycles every month, this battery can be expected to last about 77 months, or 6.5 years – significantly less than the normal expected lifetime of a car. Hence, by using the developed app, an owner can monitor the battery lifetime consumption of the vehicle on a daily, weekly or monthly basis, without performing harmful 0-100% deep charges.&lt;/p>
&lt;p>Currently, there is talk about new batteries which will be capable of “a million miles” and a much higher number of charging cycles. In the paper by Harlow et.al, “&lt;a href="https://iopscience.iop.org/article/10.1149/2.0981913jes" target="_blank" rel="noopener">A Wide Range of Testing Results on an Excellent Lithium-Ion Cell Chemistry to be used as Benchmarks for New Battery Technologies&lt;/a>” (2019) batteries with NMC532 cathodes have been found capable of higher cycle life, of 5000 or more deep charges. However, it is currently being speculated that such batteries will be used in vehicles connected to the grid (V2G), which means that deep charges could potentially happen much more frequently, perhaps even on a daily basis (charge at night when power prices are low, and sell during the day when prices are high). In such scenarios it could be of even larger importance to record the charging cycles to document remaining lifetime and ensure as high a resale value of the vehicle as possible. If and when V2G becomes a reality, the Bismuth team will make available automated data to blockchain submission scripts to capture high-frequency charging events.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Tesla-Bismuth-Crystal-07.png" alt="" loading="lazy" />&lt;/p>
&lt;p>With Bismuth’s Tesla app, PDF files can also be generated for selected dates to document, for example, total distance driven during a given period or the sum of charge energy (kWh) added. In the example above, the sum of charge energy added is found to be 131.13kWh, since there are only three actual charging events (58.49, 51.18 and 21.46 kWh) in the submitted data. Such reports could for example follow the car when sold, as an alternative to giving away the password for the asset id on the blockchain.&lt;/p>
&lt;p>The remaining two screenshots below are only available in the local app, and not on the public website. The first screenshot shows the asset registration screen. Here, the Tesla credentials are entered (username and password) as well as a (strong) anonymizer password if the user does not want to expose the actual VIN number. When the asset id has been registered, it will be linked to the Bismuth wallet address by paying a small fee. Only data for this asset id submitted from this account will be visible on the public website and in the plotting and analytics section of the app. If the owner later wants to transfer the vehicle to another owner, it must first be unregistered on the chain which allows the new owner to register it. By using the same password as the previous owner the original data set for the vehicle can be continued by the new owner. If a different password is used, then the asset id will be different and a new data set will be started from scratch. The Tesla credentials (username and password) will always stay on the local computer, and are never exposed to any external websites or services.&lt;/p>
&lt;p>By entering the Tesla credentials and the anonymizer password (if any), battery data is collected from the vehicle. Once the data has been collected, it can be submitted to the Bismuth blockchain by paying a small fee.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-05-25-Tesla-Bismuth-Crystal-09.png" alt="" loading="lazy" />
Screen for fetching battery data using the Tesla API.&lt;/p>
&lt;p>Bismuth crypto currency is required to pay for fees and can be purchased on one of the BIS &lt;a href="https://alias-bitsignal.github.io/exchanges" >exchanges&lt;/a>.&lt;/p>
&lt;p>Help and support is given in our &lt;a href="https://discord.gg/4tB3pYJ" target="_blank" rel="noopener">Discord&lt;/a> There is a dedicated channel named #batterylife.&lt;br>
For those who are not able to run from the source code, updated binaries for Windows, Mac and Linux are available at our &lt;a href="https://github.com/bismuthfoundation/TornadoWallet" target="_blank" rel="noopener">Github Repository&lt;/a>.&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;a href="https://doi.org/10.3390/en12061074" target="_blank" rel="noopener">Current Li-Ion Battery Technologies in Electric Vehicles and Opportunities for Advancements&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://iopscience.iop.org/article/10.1149/2.0981913jes" target="_blank" rel="noopener">Benchmarks for New Battery Technologies&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://alias-bitsignal.github.io/echanges" >BIS Exchanges&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://discord.gg/4tB3pYJ" target="_blank" rel="noopener">Bismuth Discord&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Decentralized Condition Monitoring</title><link>https://alias-bitsignal.github.io/blog/2020-04-30-condition-monitoring/</link><pubDate>Thu, 30 Apr 2020 00:00:00 +0000</pubDate><guid>https://alias-bitsignal.github.io/blog/2020-04-30-condition-monitoring/</guid><description>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-04-30-condition-monitoring.jpeg" alt="" loading="lazy" />
Condition monitoring (CM) is the basis for condition based maintenance (CBM). CBM is an alternative to calendar based maintenance, where an asset is serviced in regular time intervals.&lt;/p>
&lt;p>Calendar based maintenance is easy to plan and schedule but it has some weaknesses:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Assets which are in a good condition do not need to be regularly taken out of production for service, and&lt;/p>
&lt;/li>
&lt;li>
&lt;p>an asset can still fail between regular calendar based maintenance events, causing downtime in production. CM and CBM are therefore used by many industries as an alternative to calendar based maintenance to strike a balance between maintenance costs and costs associated with unplanned downtime in production.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>One example from everyday life is the annual service of your car. Since it is done on a regular basis without considering the actual condition of the car, this would be classified as calendar based maintenance. On the other hand, if you one day start to feel a small vibration in the steering wheel while driving and you take the car to service because of this observation, that would be classified as condition based maintenance.&lt;/p>
&lt;p>CM and CBM work well in a single organisation where traditional database tools (or data historians) are used to store and secure the data. This single organisation then owns the data and can control who has access. However, when more than one organisation or individual are involved, CM and CBM initiatives often fail because of the following issue: who owns the data and controls the server storing the data? Data and data analysis can have large potential value, and organisations and individuals are often reluctant to give this value away for free or lose control.&lt;/p>
&lt;p>However, data sharing among many participants can have large overall benefits for the group or society as a whole. A single asset does not normally operate in isolation, but forms part of a larger machinery or a plant. A condition which may be optimal for a single asset, may not be optimal for the overall machinery. By sharing data between participants, the performance of the overall machinery or industrial plant can be analyzed and optimized. Another example is the case where there are hundreds, thousands or millions of identical assets operating in the consumer industries. By sharing data, under-performing assets can be identified and corrective actions can be taken- benefiting society as a whole.&lt;/p>
&lt;p>In the article &lt;a href="https://ieeexplore.ieee.org/document/8048838" target="_blank" rel="noopener">“Blockchain world – Do you need a blockchain? This chart will tell you if the technology can solve your problem”&lt;/a>, IEEE Spectrum, 2017, Morgan E. Peck presented the chart below.&lt;/p>
&lt;p>&lt;img src="https://alias-bitsignal.github.io/images/2020-04-30-condition-monitoring-002.jpeg" alt="" loading="lazy" />
Image from: Morgan E. Peck, “Blockchain world – Do you need a blockchain? This chart will tell you if the technology can solve your problem“, IEEE Spectrum, 2017.&lt;/p>
&lt;p>This chart illustrates that a public blockchain may be a good solution for problems where:&lt;/p>
&lt;ul>
&lt;li>More than one participant needs to be able to submit and update data.&lt;/li>
&lt;li>The participants do not need to know and trust each other.&lt;/li>
&lt;li>The data does not need to be private.&lt;/li>
&lt;li>The database needs to be resistant to attacks or censorship.&lt;/li>
&lt;/ul>
&lt;p>In this article it will be explained how the Bismuth public blockchain can be used to implement a system for distributed condition monitoring. For more information about Bismuth, see the &lt;a href="https://alias-bitsignal.github.io/pdf/whitepaper.pdf" >whitepaper&lt;/a>.&lt;/p>
&lt;p>Bismuth is ideally suited to this type of applications, because it contains two fields in the transaction structure which are named “operation” and “datafield”. These two fields allow for building new meta protocols on top of the core blockchain software. In this article it will be demonstrated how a new meta protocol can be used in the development of a solution for decentralized condition monitoring.&lt;/p>
&lt;p>One general problem with a decentralized public blockchain is spam. Any participant can submit any data to the chain and this can not be avoided. Instead of trying to prevent spam from occurring completely, a supplementary approach would be to filter out fake data. There are several ways spam protection and filtering can be achieved, for example:&lt;/p>
&lt;ul>
&lt;li>Introducing fees to submit data. Anyone can still submit spam, but it will be expensive to do so.&lt;/li>
&lt;li>Introduce a meta protocol built on top of Bismuth’s operation and data fields to allow for filtering of fake data.&lt;/li>
&lt;/ul>
&lt;p>The class &lt;a href="https://github.com/bismuthfoundation/util/blob/master/bismuthsimpleasset.py" target="_blank" rel="noopener">BismuthSimpleAsset&lt;/a> was written with this purpose, to provide tools for filtering of fake data. This class implements at the time of writing three operations in the meta protocol:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>myapp:register
myapp:unregister
myapp:transfer&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>The app name, in this example &lt;code>myapp&lt;/code>, can be renamed to distinguish the implementation from other use-cases also using the same public blockchain.&lt;/p>
&lt;p>A physical asset often comes with a serial number or identification code printed on the asset itself somewhere. This number is in general not publicly available, but only known by the manufacturer initially, and later the customer. The manufacturer or the customer can use this identification number in Bismuth’s datafield, together with the &lt;strong>operation&lt;/strong> &lt;code>myapp:register&lt;/code> to link the serial number of the asset with his or her public/private key on the Bismuth blockchain.&lt;br>
Valid &lt;strong>asset registrations&lt;/strong> in this &lt;code>myapp&lt;/code> example can also be filtered with a minimum amount paid, to discourage spammers from randomly guessing and submitting asset id numbers. In addition to being a tool for filtering spam, a registration amount also gives the developer of the myapp use-case an income which can be used to maintain and further develop the service. Similarly, there could be an amount requirement also on the actual asset data submitted.&lt;/p>
&lt;p>One decentralized system everyone is familiar with and where everyone is allowed to submit data, is the email system. Anyone can set up a new email server and start sending from it. One of the techniques used in filtering email spam is to use a PTR record. A pointer record, or PTR record, maps an IP address to a FQDN (fully qualified domain name). It is the counterpart to the A record and is used for reverse DNS lookup, which can help with blocking spammers. Many SMTP servers reject emails if no PTR record is found for the sending server.&lt;/p>
&lt;p>The proposed approach presented in this article where an asset id number is linked to the public/private key on the blockchain to filter spam is similar to the reverse DNS method to filter email spam. The first user to link the asset’s identification number to his or her account, can be considered to be the rightful owner of the asset. This information can then later be used to filter out fake data about this asset submitted by other users. The following Python function in &lt;strong>BismuthSimpleAsset&lt;/strong> returns the valid registrant given an asset id:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>def get_registrant(self,asset_id):
&amp;#34;&amp;#34;&amp;#34;Returns the current registrant of a specified asset id&amp;#34;&amp;#34;&amp;#34;
regs = self.__get_reg_unreg_sorted(asset_id)
registrant = self.__get_registrant_from_regs(regs)
return registrant&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>If the asset owner later wants to release his or her registration of the asset, this can be done by submitting the &lt;strong>operation&lt;/strong> &lt;code>myapp:unregister&lt;/code> together with the asset id in the &lt;strong>datafield&lt;/strong>. Alternatively, the asset owner can transfer the ownership of the asset to another account by submitting the operation myapp:transfer together with the following in the &lt;strong>datafield&lt;/strong>: &lt;code>asset_id,new address&lt;/code>.&lt;/p>
&lt;p>Another function in the BismuthSimpleAsset class- &lt;code>get_all_asset_ids()&lt;/code> -returns all valid asset id numbers and associated Bismuth accounts. This function handles multiple register, unregister and transfer events of assets.&lt;/p>
&lt;p>Whenever a participant submits data to the public blockchain, the command &lt;code>myapp:data&lt;/code> can for example be used, or something more specific, for example &lt;code>myapp:vibration_data&lt;/code>. In the datafield a JSON string can be submitted, allowing for a flexible list of variables to be used. The asset id should be part of this JSON structure, to allow the filtering of fake data. Bismuth allows for a string of up to &lt;strong>100,000 characters in the datafield&lt;/strong>, so relatively large amount of data can be submitted. However, the transaction fee increases linearly with the data size.&lt;/p>
&lt;p>Having a decentralized public blockchain with open data for everyone to access has potentially many benefits. Some of the benefits are:&lt;/p>
&lt;ul>
&lt;li>It allows for independent 3rd party data analysts to offer services to the participants. This analysis can for example tell you about the performance of your asset, and what you can do to improve it.&lt;/li>
&lt;li>If someone registers a valid asset id and starts submitting fake data, this can potentially be detected by 3rd party data analysis. For example, some physical variables like the odometer value of a car can only increase over time. Invalid data based on more complex relationships between variables can potentially also be detected. The 3rd party service could then for example offer a whitelist and blacklist of asset id numbers, to allow for even more advanced data filtering.&lt;/li>
&lt;li>The owner of an asset can compare the performance of his or her asset with other peers, detect sub-optimal performance, and apply corrective actions.
If the owner later wants to sell the asset to someone else, he or she can provide proof of asset performance during it’s lifetime to the new owner by using the publicly available data. By giving proof that the asset has been operated with care and within the specifications, the resale value of the asset may be higher than it otherwise would be.&lt;/li>
&lt;li>An increasing number of assets and consumer products are connected to the internet, and come with API interfaces which the owner or operator can use. Hence, the submission of data to the public blockchain can easily be automated or semi-automated for such assets.&lt;/li>
&lt;/ul>
&lt;p>This article has given an introduction to some building blocks for decentralized condition monitoring using the Bismuth public blockchain. Several future applications and implementations using the principles laid out here are currently being worked on and will be published separately when ready.&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;a href="hhttps://ieeexplore.ieee.org/document/8048838" >Blockchain World - Do you need a blockchain?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://alias-bitsignal.github.io/pdf/whitepaper.pdf" >Bismuth Whitepaper&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/bismuthfoundation/util/blob/master/bismuthsimpleasset.py" target="_blank" rel="noopener">Github - Bismuth SimpleAsset&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>